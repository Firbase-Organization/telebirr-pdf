// This file is auto-generated by opencollective-frontend/scripts/export-tax-form-types.ts

export enum TaxFormType {
  W9 = 'W9',
  W8_BEN = 'W8_BEN',
  W8_BEN_E = 'W8_BEN_E',
}

export enum SubmitterType {
  Individual = 'Individual',
  Business = 'Business',
}

export enum FederalTaxClassification {
  Individual = 'Individual',
  C_Corporation = 'C_Corporation',
  S_Corporation = 'S_Corporation',
  Partnership = 'Partnership',
  TrustEstate = 'TrustEstate',
  LimitedLiabilityCompany = 'LimitedLiabilityCompany',
  Other = 'Other',
}

export enum Chapter3Status {
  Corporation = 'Corporation',
  Partnership = 'Partnership',
  SimpleTrust = 'SimpleTrust',
  TaxExemptOrganization = 'TaxExemptOrganization',
  ComplexTrust = 'ComplexTrust',
  ForeignGovernmentControlledEntity = 'ForeignGovernmentControlledEntity',
  CentralBankOfIssue = 'CentralBankOfIssue',
  PrivateFoundation = 'PrivateFoundation',
  Estate = 'Estate',
  ForeignGovernmentIntegralPart = 'ForeignGovernmentIntegralPart',
  GrantorTrust = 'GrantorTrust',
  DisregardedEntity = 'DisregardedEntity',
  InternationalOrganization = 'InternationalOrganization',
}

export enum TypeOfLimitationOnBenefitsProvisions {
  Government = 'Government',
  TaxExemptPensionTrustOrPensionFund = 'TaxExemptPensionTrustOrPensionFund',
  OtherTaxExemptOrganization = 'OtherTaxExemptOrganization',
  PubliclyTradedCorporation = 'PubliclyTradedCorporation',
  SubsidiaryOfAPubliclyTradedCorporation = 'SubsidiaryOfAPubliclyTradedCorporation',
  CompanyThatMeetsTheOwnershipAndBaseErosionTest = 'CompanyThatMeetsTheOwnershipAndBaseErosionTest',
  CompanyThatMeetsTheDerivativeBenefitsTest = 'CompanyThatMeetsTheDerivativeBenefitsTest',
  CompanyWithAnItemOfIncomeThatMeetsActiveTradeOrBusinessTest = 'CompanyWithAnItemOfIncomeThatMeetsActiveTradeOrBusinessTest',
  FavorableDiscretionaryDeterminationByTheUSCompetentAuthorityReceived = 'FavorableDiscretionaryDeterminationByTheUSCompetentAuthorityReceived',
  NoLOBArticleInTreaty = 'NoLOBArticleInTreaty',
  Other = 'Other',
}

export enum NFFEStatus {
  ActiveNFFE = 'ActiveNFFE',
  PassiveNFFE = 'PassiveNFFE',
  NonProfitOrganization = 'NonProfitOrganization',
}

export type TaxFormNameValues = { firstName?: string; middleName?: string; lastName?: string };

export type TaxFormLocationValues = {
  country?: string;
  structured?: { address1?: string; address2?: string; city?: string; zone?: string; postalCode?: string };
};

export type BaseFormValues = {
  isUSPersonOrEntity?: boolean;
  submitterType?: SubmitterType;
  formType?: TaxFormType;
  email?: string;
  signer?: { firstName?: string; middleName?: string; lastName?: string };
  isSigned?: boolean;
};

export type W9TaxFormValues = {
  isUSPersonOrEntity?: boolean;
  submitterType?: SubmitterType;
  formType?: TaxFormType;
  email?: string;
  signer?: { firstName?: string; middleName?: string; lastName?: string };
  isSigned?: boolean;
  businessName?: string;
  federalTaxClassificationDetails?: string;
  exemptPayeeCode?: string;
  fatcaExemptionCode?: string;
  taxIdNumberType?: 'SSN' | 'EIN';
  taxIdNumber?: string;
  accountNumbers?: string;
  federalTaxClassification?: FederalTaxClassification;
  hasConfirmedTOS?: boolean;
  location?: {
    country?: string;
    structured?: { address1?: string; address2?: string; city?: string; zone?: string; postalCode?: string };
  };
};

export type W8BenTaxFormValues = {
  isUSPersonOrEntity?: boolean;
  submitterType?: SubmitterType;
  formType?: TaxFormType;
  email?: string;
  signer?: { firstName?: string; middleName?: string; lastName?: string };
  isSigned?: boolean;
  beneficialOwner?: { firstName?: string; middleName?: string; lastName?: string };
  taxpayerIdentificationNumberTypeUS?: 'SSN' | 'ITIN';
  taxpayerIdentificationNumberUS?: string;
  taxpayerIdentificationNumberForeign?: string;
  dateOfBirth?: string;
  claimsSpecialRatesAndConditions?: boolean;
  claimsArticleAndParagraph?: string;
  claimsRate?: number;
  claimsIncomeType?: string;
  claimsExplanation?: string;
  hasTaxTreatySpecialRatesAndConditions?: boolean;
  certifiesResidentCountry?: boolean;
  hasConfirmedTOS?: boolean;
  countryOfCitizenship?: string;
  residenceAddress?: {
    country?: string;
    structured?: { address1?: string; address2?: string; city?: string; zone?: string; postalCode?: string };
  };
  mailingAddress?: {
    country?: string;
    structured?: { address1?: string; address2?: string; city?: string; zone?: string; postalCode?: string };
  };
  isSignerTheBeneficialOwner?: boolean;
  signerCapacity?: string;
};

export type W8BenETaxFormValues = {
  isUSPersonOrEntity?: boolean;
  submitterType?: SubmitterType;
  formType?: TaxFormType;
  email?: string;
  signer?: { firstName?: string; middleName?: string; lastName?: string };
  isSigned?: boolean;
  nffeStatus?: NFFEStatus;
  businessName?: string;
  businessCountryOfIncorporationOrOrganization?: string;
  businessAddress?: {
    country?: string;
    structured?: { address1?: string; address2?: string; city?: string; zone?: string; postalCode?: string };
  };
  businessMailingAddress?: {
    country?: string;
    structured?: { address1?: string; address2?: string; city?: string; zone?: string; postalCode?: string };
  };
  disregardedBusinessName?: string;
  chapter3Status?: Chapter3Status;
  hasCapacityToSign?: boolean;
  entityHasNoUSOwners?: boolean;
  usOwners?: string;
  certifyStatus?: boolean;
  isHybridEntity?: boolean;
  claimsSpecialRatesAndConditions?: boolean;
  claimsArticleAndParagraph?: string;
  claimsRate?: number;
  claimsIncomeType?: string;
  claimsExplanation?: string;
  certifyBeneficialOwnerCountry?: boolean;
  typeOfLimitationOnBenefitsProvisions?: TypeOfLimitationOnBenefitsProvisions;
  typeOfLimitationOnBenefitsProvisionsOther?: string;
  certifyDerivesIncome?: boolean;
  certifyForeignCorporation?: boolean;
  taxpayerIdentificationNumberForeign?: string;
  taxpayerIdentificationNumberUS?: string;
  giin?: string;
  reference?: string;
  fatcaClassification?: string;
};
